// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CLIENTE
  ADMIN
}

// ✅ NOVO ENUM para os dias da semana (0 = Domingo, 1 = Segunda, ...)
enum DiaDaSemana {
  DOMINGO
  SEGUNDA
  TERCA
  QUARTA
  QUINTA
  SEXTA
  SABADO
}

// ✅ NOVO MODELO para Horários de Funcionamento
model HorarioFuncionamento {
  id        String      @id @default(uuid())
  diaSemana DiaDaSemana @unique // Garante que só há uma entrada por dia da semana
  abertura  String // Hora no formato "HH:MM" (ex: "09:00")
  fecho     String // Hora no formato "HH:MM" (ex: "18:00")
  aberto    Boolean  @default(true) // Indica se a clínica abre neste dia
}

// --- Modelos Existentes ---
model User {
  id           String        @id @default(uuid())
  usuario      String        @unique
  email        String        @unique
  senhaHash    String
  telefone     String?
  role         Role          @default(CLIENTE)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  agendamentos Agendamento[]
}

model Profissional {
  id           String        @id @default(uuid())
  nome         String
  especialidade String?
  agendamentos Agendamento[]
}

model Promocao {
  id                String    @id @default(uuid())
  titulo            String
  descricao         String
  descontoPercentual Float
  dataInicio        DateTime
  dataFim           DateTime
}

model Servico {
  id           String        @id @default(uuid())
  nome         String
  descricao    String?
  preco        Float
  duracao      Int
  agendamentos Agendamento[]
}

model Agendamento {
  id        String   @id @default(uuid())
  data      DateTime
  status    String   @default("PENDENTE")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clienteId String
  cliente   User     @relation(fields: [clienteId], references: [id])
  servicoId String
  servico   Servico  @relation(fields: [servicoId], references: [id])
  profissionalId String
  profissional   Profissional @relation(fields: [profissionalId], references: [id])
}